var{isArray:a}=Array,{keys:b}=Object;(function($){var A='tdac',c={DATA:'DATA',SYMBOL:'SYMBOL',ACTION:'ACTION',ICON:'ICON'},d=[{vfTitle:'⌴',vfCode:'space',vfType:c.SYMBOL,vfAcutalField:'space',vfActualFieldTitle:'Dấu cách',value:'&nbsp;'},{vfTitle:'↩',vfCode:'newline',vfType:c.SYMBOL,vfAcutalField:'newline',vfActualFieldTitle:'NewLine',value:'<br/>'},{vfTitle:'-',vfCode:'minus',vfType:c.SYMBOL,vfAcutalField:'minus',vfActualFieldTitle:'Dấu trừ',value:'&hyphen;'},{vfTitle:'|',vfCode:'vertical',vfType:c.SYMBOL,vfAcutalField:'vertical',vfActualFieldTitle:'Dấu dọc',value:'|'},{vfTitle:',',vfCode:'comma',vfType:c.SYMBOL,vfAcutalField:'comma',vfActualFieldTitle:'Dấu phẩy',value:','},{vfTitle:'.',vfCode:'dot',vfType:c.SYMBOL,vfAcutalField:'dot',vfActualFieldTitle:'Dấu chấm',value:'.'},{vfTitle:';',vfCode:'semicolon',vfType:c.SYMBOL,vfAcutalField:'semicolon',vfActualFieldTitle:'Chấm phẩy',value:';'},{vfTitle:'[',vfCode:'openBracket',vfType:c.SYMBOL,vfAcutalField:'openBracket',vfActualFieldTitle:'Mở ngoặc vuông',value:'['},{vfTitle:']',vfCode:'closeBracket',vfType:c.SYMBOL,vfAcutalField:'closeBracket',vfActualFieldTitle:'Đóng ngoặc vuông',value:']'},{vfTitle:'(',vfCode:'openRoundBracket',vfType:c.SYMBOL,vfAcutalField:'openRoundBracket',vfActualFieldTitle:'Mở ngoặc tròn',value:'('},{vfTitle:')',vfCode:'closeRoundBracket',vfType:c.SYMBOL,vfAcutalField:'closeRoundBracket',vfActualFieldTitle:'Đóng hoặc tròn',value:')'}],f=(_A,_b={})=>_A.replace(/\{\{(.*?)\}\}/g,(E,_B)=>{const _C=_b[_B];return (_C!==void 0&&_C!==null)?_C:E}),g=aA=>`${aA}`.replace(/[&<>"'`=\/]/g,s=>{'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;','\'':'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;'}[s]),h=aB=>{try {return JSON.parse(aB)} catch {return null}};function _(B={},C='',_c={}){for(const _a of b(B)){var D=C?`${C}.${_a}`:_a;typeof B[_a]=='object'&&B[_a]!==null?_(B[_a],D,_c):_c[D]=B[_a]}return _c}function i(aC,aD,aE){aC[aD]=aC[aE];aC[aE]=aC[aD];return aC}$.fn.flexiTable=function({columns:aG=[],templates:aH=[],data:_d=[],height:_e=300,fixed:F=!1,onCta:aF}){var G=$(this),I=[...aH,...d].reduce((aL,aM)=>{aL[aM.vfCode]=aM;return aL},{}),j=(aN={},aO,aP,_D={})=>{const _E=[];for(const aQ of aO.fieldCodes){const aR=_D[aQ];if(aR){if(aR.vfType==c.SYMBOL){_E.push(aR?.value||'');continue}if(aR.vfType==c.ACTION){_E.push(`<span class="btn btn-${aR.vfAcutalField}" onClick="${H}('${aR.vfCode}', ${aP})">${aR?.vfTitle||''}</span>`);continue}if(aR.vfType==c.ICON){_E.push(`<img class="icon" src="${aR.value}"/>`);continue}if(aR.vfRenderFunc){_E.push(aR.vfRenderFunc(aN,aR,aP,H));continue}const aS=aN[aR.vfAcutalField],aT=_(aN);if(a(aS)){_E.push(aR.templateShow?aS.map(aV=>f(aR.templateShow,{$item:g(aV)})).join(''):aS.join(', '));continue}let aU=aT[aR?.vfAcutalField||''];aR?.enum&&b(aR.enum).length>0&&(aU=aR.enum[aU]||aU,aU=g(aU));aR?.templateShow&&(aU=f(aR?.templateShow,{value:g(aU)}));_E.push(aU)}}return _E.join('')};G.addClass('wrapper-table').addClass('custom-scroll');F&&(G.addClass('fixed'),G.css({height:`${_e}px`}));var H=`${A}${~~Math.random()*1e6}`;window[H]=(aI,aJ)=>{if(aF){var aK=_d[aJ];aF(aI,aK,aJ)}};function k(){var aW=$('<table class="dynamic-table"></table>');G.append(aW);this.table=aW;this.data=_d;this.columns=aG;this.templates=aH}k.prototype.drawHeader=function(){var aX=$('<thead></thead>'),aY=$('<tr></tr>');for(const bA of this.columns){var aZ=$(`<th> ${bA.title} </th>`);aY.append(aZ)}aX.append(aY);this.table.append(aX);return this};k.prototype.drawBody=function(){var bB=$('<tbody></tbody>');for(const[bF,bG] of this.data.entries()){var bC=$('<tr></tr>');for(const bH of this.columns){var bD=$(`<td></td>`),bE=$('<div class="td-line"></div>');bE.html(j(bG,bH,bF,I));bD.append(bE);bC.append(bD)}bB.append(bC)}this.table.append(bB);return this};k.prototype.setTemplate=function(bI){this.templates=bI;return this};k.prototype.setColumns=function(bJ){this.columns=bJ;return this};k.prototype.setData=function(bK){this.data=bK;return this};k.prototype.reload=function(){this.table.empty();this.drawHeader();this.drawBody();return this};var l=new k();l.drawHeader();l.drawBody();return l};$.fn.flexiTableEdit=function({columns:bL=[],vfFields:bM=[],actions:bN=[],icons:bO=[],height:bP=390}){var _f=$(this),_g=$('<div class="grid-col-2"></div>');_f.addClass('dynamic-table-edit').addClass('box').addClass('box-grid');_f.css({height:`${bP}px`});_f.append(_g);_g.append(`
      <div class="edit-columns">
        <div class="justify-content-space-between">
          <h5> Columns </h5>
          <div>
            <button class="btn-plus" :disabled="disabled" @click="onAddColumn">✚</button>
          </div>
        </div>
        <hr style="margin: 5px 0"/>
        <ul class="dragArea list-group custom-scroll list-columns">
        </ul>
      </div>

      <div class="edit-columns">
        <h5>Fields</h5>
        <hr style="margin: 5px 0"/>
          <ul class="list-field custom-scroll list-fields">
            <!--
              <li v-for="field in listFields" :key="field.field">
                <div class="label">{{ field.title }}:</div>
                <div class="item" draggable="true" @dragstart="e => onDragstart(e, vfield)" v-for="vfield in field.variants" :key="vfield.vfCode"> {{ vfield.vfTitle }} </div>
              </li>
            -->
          </ul>
      </div>

      <div class="edit-columns etc-field custom-scroll">
        <div>
          <h5>Separator</h5>
          <hr style="margin: 5px 0"/>
          <ul class="list-field-symbol list-separators">
            <!--
              <li v-for="field in symbols" :key="field.vfAcutalField">
                <div class="item" draggable="true" @dragstart="e => onDragstart(e, field)"> {{ field.vfTitle }} </div>
              </li>
            -->
          </ul>
        </div>

        <div style="margin-top: 10px">
          <h5>Actions</h5>
          <hr style="margin: 5px 0"/>
          <ul class="list-field-symbol list-actions">
            <!--
              <li v-for="field in actions" :key="field.vfAcutalField">
                <div class="item btn" draggable="true" @dragstart="e => onDragstart(e, field)"> {{ field.vfTitle }} </div>
              </li>
            -->
          </ul>
        </div>
        
        <div style="margin-top: 10px">
          <h5>Icons</h5>
          <hr style="margin: 5px 0"/>
          <ul class="list-field-symbol list-icons">
            <!--
              <li v-for="field in icons" :key="field.vfAcutalField">
                <img :src="field.value" class="icon" draggable="true" @dragstart="e => onDragstart(e, field)"/>
              </li>
            -->
          </ul>
        </div>
      </div>
    `);function _h(){this.columns=bL;this.vfFields=bM;this.disabled=!1;this.mapFunction={};this.btnPlus=_g.find('.btn-plus');this.listColumns=_g.find('.list-columns');this.listFields=_g.find('.list-fields');this.listSeparator=_g.find('.list-separators');this.listActions=_g.find('.list-actions');this.listIcons=_g.find('.list-icons');for(const bS of d){var bQ=$('<li></li>'),bR=$(`<div class="item" draggable="true"> ${bS.vfTitle} </div>`);bQ.append(bR);this.listSeparator.append(bQ);bR.on('dragstart',e=>this.onDragstart(e,bS))}for(const bT of bN){var bQ=$('<li></li>'),bR=$(`<div class="item btn" draggable="true"> ${bT.vfTitle} </div>`);bQ.append(bR);this.listActions.append(bQ);bR.on('dragstart',e=>this.onDragstart(e,bT))}for(const bU of bO){var bQ=$('<li></li>'),bR=$(`<img src="${bU.value}" class="icon" draggable="true" />`);bQ.append(bR);this.listIcons.append(bQ);bR.on('dragstart',e=>this.onDragstart(e,bU))}this.mapFieldInfo=[...bM,...bO,...bN,...d].reduce((bV,bW)=>{bV[bW.vfCode]=bW;return bV},{});this.drawVfFields();this.drawColumns();this.btnPlus.click(()=>this.addColumn());this.listColumns.sortable({handle:'.handle',onChange:(e=>{this.columns=i(this.columns,e.oldIndex,e.newIndex);this.emit('change')})});return this};_h.prototype.drawVfFields=function(){var bX={},bY=[];for(const cC of this.vfFields){var bZ=cC?.vfAcutalField||'';bX[bZ]==void 0?(bY.push({title:cC.vfActualFieldTitle||'',field:bZ,variants:[cC]}),bX[bZ]=bY.length-1):(bY[bX[bZ]].variants.push(cC))}for(const cD of bY){var cA=$('<li></li>'),cB=$(`<div class="label"> ${cD.title}:</div>`);cA.append(cB);for(const cE of cD.variants){var _F=$(`<div class="item" draggable="true"> ${cE.vfTitle} </div>`);cA.append(_F);_F.on('dragstart',e=>this.onDragstart(e,cE))}this.listFields.append(cA)}};_h.prototype.drawColumns=function(){var cF=this;for(const cG of cF.columns)cF._addRow(cG)};_h.prototype.addEventListener=function(cH,cI){this.mapFunction[cH]==void 0&&(this.mapFunction[cH]=[]);this.mapFunction[cH].push(cI)};_h.prototype.emit=function(cJ){var cK=this.mapFunction[cJ];if(cK&&cK.length>0)for(const cL of cK)cL(this.columns)};_h.prototype._addRow=function(cM){var cN=this,_i=$(`
        <li class="list-group-item">
          <div class="label align-items-center drop-zone">
            <div class="align-items-center">
              <span class="handle">☰</span>
              <!--<Popper placement="right-start" arrow class="popper-wrapper">-->
                <button class="btn-more" :disabled="disabled">⋯</button>
                <template #content>
                  <div class="popover-action">
                    <div>
                      <button class="btn-more" :class="{active: (element.align || 'left') === 'left'}" @click="element.align = 'left'">
                        <img :src="AlignLeftIcon" />
                      </button>
                      <button class="btn-more" :class="{active: element.align === 'center'}" @click="element.align = 'center'">
                        <img :src="AlignCenterIcon" />
                      </button>
                      <button class="btn-more" :class="{active: element.align === 'right'}" @click="element.align = 'right'">
                        <img :src="AlignRightIcon" />
                      </button>
                    </div>
                    <div style="margin-top: 4px">
                      <button class="btn-more" :class="{active: element.vAlign === 'top'}" @click="element.vAlign = 'top'">
                        <img :src="VerticalAlignTopIcon" />
                      </button>
                      <button class="btn-more" :class="{active: (element.vAlign || 'middle') === 'middle'}" @click="element.vAlign = 'middle'">
                        <img :src="VerticalAlignCenterIcon" />
                      </button>
                      <button class="btn-more" :class="{active: element.vAlign === 'bottom'}" @click="element.vAlign = 'bottom'">
                        <img :src="VerticalAlignBottomIcon" />
                      </button>
                    </div>

                    <div style="margin-top: 4px" class="div-input">
                      <label class="label">width:</label> <input type="text" v-model="element.width" placeholder="# px | %"/>
                    </div>
                    <div style="margin-top: 4px" class="div-input">
                      <label class="label">min-width:</label> <input type="text" v-model="element.minWidth" placeholder="# px | %"/>
                    </div>
                    <div style="margin-top: 4px" class="div-input">
                      <label class="label">max-width:</label> <input type="text" v-model="element.maxWidth" placeholder="# px | %"/>
                    </div>
                  </div>
                  <div></div>
                </template>
              <!--</Popper>-->
              
              <input class="input-title" type="text" placeholder="Column name"/>
            </div>
            <ul class="list-selected-field">
              <!--
              <li v-for="vfCode in element.fieldCodes" :key="vfCode">
                <img v-if="mapFieldInfo[vfCode]?.vfType === VfType.ICON" class="icon-selected":src="mapFieldInfo[vfCode]?.value" />
                <span v-else>{{ mapFieldInfo[vfCode]?.vfTitle }}</span>
              </li>
              <li class="no-data">Kéo field vào đây</li>
              -->
            </ul>
          </div>
          <div>
            <button class="btn btn-close" @click.stop="closeIndex(index)" :disabled="disabled">
              ✘
            </button>
          </div>
        </li>
      `),cO=_i.find('.drop-zone'),cP=_i.find('.input-title'),cQ=_i.find('.list-selected-field'),cR=_i.find('.btn-close'),_G=cS=>{const cT=cN.mapFieldInfo[cS];if(cT)return cT.vfType==c.ICON?`<img class="icon-selected" src="${cT.value}" />`:`<span>${cT.vfTitle}</span>`;return''};cN.listColumns.append(_i);cP.val(cM.title);if(cM.fieldCodes.length>0){cQ.empty();for(const cU of cM.fieldCodes){var _H=_G(cU);_H&&cQ.append(`<li>${_H}</li>`)}}else cQ.append(`<li class="no-data">Kéo field vào đây</li>`);cO.on('drop',function(e){if(cN.disabled)return!1;e.preventDefault();var cV=$(this),cW=h(e.originalEvent.dataTransfer.getData('text'));cV.parent().removeClass('hover');if(cW?.vfCode){var cX=cV.parent(),cY=cN.listColumns.find('li.list-group-item').index(cX),cZ=cV.find('.list-selected-field'),dA=_G(cW.vfCode);cN.columns[cY].fieldCodes.push(cW.vfCode);cZ.find('li.no-data').remove();dA&&cZ.append(`<li>${dA}</li>`);cN.emit('change')}});cO.on('dragover',function(e){if(cN.disabled)return!1;e.preventDefault();$(this).parent().addClass('hover')});cO.on('dragleave',function(){$(this).parent().removeClass('hover')});cP.change(function(){var dB=$(this),dC=cN.listColumns.find('li.list-group-item').index(dB.parent().parent().parent());cN.columns[dC].title=dB.val();cN.emit('change')});cR.click(function(){var dD=$(this),dE=cN.listColumns.find('li.list-group-item').index(dD.parent().parent());cN.columns[dE].fieldCodes.length>0?(cN.columns[dE].fieldCodes.length=0,_f.find('.list-selected-field').empty().append(`<li class="no-data">Kéo field vào đây</li>`)):(cN.columns.splice(dE,1),cN.listColumns.find('li.list-group-item').eq(dE).remove());this.emit('change')})};_h.prototype.addColumn=function(){var dF={title:'',fieldCodes:[]};this.columns.push(dF);this.emit('change');this._addRow(dF)};_h.prototype.onDragstart=function(e,dG){e.originalEvent.dataTransfer.setData('text',JSON.stringify(dG))};return new _h()}})(jQuery);
